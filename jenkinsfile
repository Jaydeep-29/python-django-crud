pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "crud-django-jenkins:latest"
        CONTAINER_NAME = "my-running-app"
        DJANGO_SECRET_KEY = credentials('DJANGO_SECRET_KEY')
        DJANGO_DEBUG = 'False'
        // DB_PASSWORD = credentials('DB_PASSWORD')
    }

    stages {
        stage('Install and Test') {
            agent {
                docker {
                    image 'python:3.11-slim'
                }
            }
            steps {
                sh '''
                    pip install -r requirements.txt
                    python manage.py test
                    mkdir -p reports
                    pytest --junitxml=reports/results.xml
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t $DOCKER_IMAGE ."
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'dockerhub-creds',
                    usernameVariable: 'DOCKER_USER',
                    passwordVariable: 'DOCKER_TOKEN'
                )]) {
                    sh '''
                        echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USER" --password-stdin
                        docker tag $DOCKER_IMAGE $DOCKER_USER/$DOCKER_IMAGE
                        docker push $DOCKER_USER/$DOCKER_IMAGE
                    '''
                }
            }
        }

        stage('Run Application') {
            steps {
                sh '''
                    docker stop $CONTAINER_NAME || true
                    docker rm $CONTAINER_NAME || true
                    docker run -d --name $CONTAINER_NAME \
                      -p 8000:8000 \
                      -e DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY \
                      -e DJANGO_DEBUG=$DJANGO_DEBUG \
                      $DOCKER_IMAGE
                '''
            }
        }
        stage('Deploy to Stage'){
           

            steps {
                withCredentials([file(credentialsId: 'kubeconfig-dev', variable: 'KUBECONFIG')]) {
                sh "kubectl apply -f k8s/base/deployment.yaml"
                }
            }
        }

        stage ("Selenium UI Tests"){
            steps{
                sh 'pytest selenium_tests/'
            }
        }

        stage ('Approval'){
            steps {
                input 'Approve deployment to production?'
            }
        }
        stage('Production') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig-dev', variable: 'KUBECONFIG')]) {
                sh 'kubectl apply -f k8s/base/Prod-Deployment.yaml'
                }
            }
        }
    }

    post {
        success {
            echo "✅ Pipeline completed. App running at http://localhost:8000"
        }
        failure {
            echo "❌ Something went wrong. Check logs for details."
        }
    }
}
