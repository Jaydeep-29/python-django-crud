pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "my-web-app:latest"
        CONTAINER_NAME = "my-running-app"
        DJANGO_SECRET_KEY = credentials('DJANGO_SECRET_KEY')
        DJANGO_DEBUG = 'False'
        // If you need DB_PASSWORD, uncomment and configure in Jenkins
        // DB_PASSWORD = credentials('DB_PASSWORD')
    }

    stages {
        stage('Install and Test') {
            agent {
                docker {
                    image 'python:3.11-slim'
                }
            }
            steps {
                sh '''
                    pip install -r requirements.txt
                    python manage.py test
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${DOCKER_IMAGE} ."
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'dockerhub-creds',
                    usernameVariable: 'DOCKER_USER',
                    passwordVariable: 'DOCKER_TOKEN'
                )]) {
                    sh '''
                        echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USER" --password-stdin
                        docker tag my-web-app:latest $DOCKER_USER/my-web-app:latest
                        docker push $DOCKER_USER/my-web-app:latest
                    '''
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                sh 'kubectl apply -k k8s/'
            }
        }
    }

    post {
        success {
            echo "✅ Pipeline completed. App running on Kubernetes."
        }
        failure {
            echo "❌ Something went wrong. Check logs for details."
        }
    }
}
